generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["relationJoins"]
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Product {
    id          String @id @default(cuid())
    name        String
    slug        String
    description String
    price       Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    images      Image[]
    categories  CategoriesOnProducts[]
    collections CollectionsOnProducts[]
    cartItem    CartItem[]
}

model Category {
    id          String                 @id @default(cuid())
    name        String
    slug        String
    description String
    products    CategoriesOnProducts[]
}

model Collection {
    id          String                  @id @default(cuid())
    name        String
    slug        String
    description String
    products    CollectionsOnProducts[]
}

model CategoriesOnProducts {
    product    Product  @relation(fields: [productId], references: [id])
    productId  String
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId String

    @@id([productId, categoryId])
}

model CollectionsOnProducts {
    product      Product    @relation(fields: [productId], references: [id])
    productId    String
    collection   Collection @relation(fields: [collectionId], references: [id])
    collectionId String

    @@id([productId, collectionId])
}

model Image {
    id        String   @id @default(cuid())
    url       String
    alt       String
    width     Int
    height    Int
    product   Product? @relation(fields: [productId], references: [id])
    productId String?
}

model Cart {
    id        String     @id @default(cuid())
    items     CartItem[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
}

model CartItem {
    id        String  @id @default(cuid())
    quantity  Int
    product   Product @relation(fields: [productId], references: [id])
    productId String
    cart      Cart    @relation(fields: [cartId], references: [id])
    cartId    String
}

model Order {
    id        String   @id @default(cuid())
    items     String
    total     Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
